<div class="container">
  <nav class="main-nav">
    <%= link_to "Forms", forms_path %>
    <%= link_to "Sections", sections_path %>
    <%= link_to "Questions", questions_path %>
    <%= link_to "Answers", answers_path %>
    <%= link_to "Responses", responses_path %>
    <%= link_to "Metrics", metrics_path %>
    <%= link_to "Dashboards", dashboards_path %>
    <%= link_to "Logout", logout_path, data: { "turbo-method": :delete } %>
  </nav>

  <div class="index-header">
    <h1><%= @metric.display_name %></h1>
    <div style="display: flex; gap: 0.5rem;">
      <%= link_to "Edit", edit_metric_path(@metric), class: "btn btn-primary" %>
      <%= link_to "Delete", soft_delete_metric_path(@metric), data: { "turbo-method": :patch, confirm: "Are you sure?" }, class: "btn", style: "background-color: var(--error); color: var(--white);" %>
    </div>
  </div>

  <%= link_to "← Back to Metrics", metrics_path, class: "back-link" %>

  <div class="card">
    <h2>Metric Configuration</h2>
    <p><strong>Function:</strong> <%= @metric.function.capitalize %></p>
    <p><strong>Type:</strong> <%= @metric.type %></p>
    <p><strong>Resolution:</strong> <%= @metric.resolution %></p>
    <p><strong>Width:</strong> <%= @metric.width %></p>
    
    <% if @metric.function == 'answer' %>
      <% if @metric.scale.present? && @metric.scale != 1.0 %>
        <p><strong>Scale Factor:</strong> <%= @metric.scale %></p>
      <% end %>
      
      <% if @metric.questions.any? %>
        <p><strong>Referenced Questions:</strong></p>
        <ul>
          <% @metric.questions.each do |question| %>
            <li><%= link_to "#{question.name} (#{question.question_type})", question_path(question) %></li>
          <% end %>
        </ul>
      <% end %>
    <% end %>
    
    <% if ['sum', 'average', 'difference', 'count'].include?(@metric.function) && @metric.child_metrics.any? %>
      <% if @metric.function == 'difference' && @metric.first_metric.present? %>
        <p><strong>First Metric (primary):</strong> <%= link_to "#{@metric.first_metric.display_name} - #{@metric.first_metric.function&.capitalize || 'Unknown'} (#{@metric.first_metric.resolution}/#{@metric.first_metric.width})", metric_path(@metric.first_metric) %></p>
        <p><strong>Other Metrics (subtracted from first):</strong></p>
      <% else %>
        <p><strong>Referenced Metrics:</strong></p>
      <% end %>
      <ul>
        <% @metric.child_metrics.each do |child_metric| %>
          <li><%= link_to "#{child_metric.display_name} - #{child_metric.function&.capitalize || 'Unknown'} (#{child_metric.resolution}/#{child_metric.width})", metric_path(child_metric) %></li>
        <% end %>
      </ul>
    <% end %>
    
    <% if @metric.parent_metrics.any? %>
      <p><strong>Used by Metrics:</strong></p>
      <ul>
        <% @metric.parent_metrics.each do |parent_metric| %>
          <li><%= link_to "#{parent_metric.display_name} - #{parent_metric.function&.capitalize || 'Unknown'} (#{parent_metric.resolution}/#{parent_metric.width})", metric_path(parent_metric) %></li>
        <% end %>
      </ul>
    <% end %>
  </div>
  
  <div class="card">
    <h2>Time Series Data</h2>
    
    <% if @series_data.any? %>
      <div class="chart-container" style="margin-bottom: 2rem;">
        <canvas id="metricChart" width="400" height="200"></canvas>
      </div>
      
      <h3>Raw Data</h3>
      <table class="series-table">
        <thead>
          <tr>
            <th>Time</th>
            <th>Value</th>
          </tr>
        </thead>
        <tbody>
          <% @series_data.each do |time, value| %>
            <tr>
              <td><%= time.strftime("%B %d, %Y") %></td>
              <td><%= value.round(2) %></td>
            </tr>
          <% end %>
        </tbody>
      </table>
    <% else %>
      <p>No data available for this metric configuration.</p>
    <% end %>
  </div>
</div>

<% if @series_data.any? %>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
  const ctx = document.getElementById('metricChart').getContext('2d');
  
  const chartData = {
    labels: <%= raw @series_data.map { |time, _| time.strftime("%m/%d") }.to_json %>,
    datasets: [{
      label: <%= raw "#{@metric.type.capitalize} Value".to_json %>,
      data: <%= raw @series_data.map { |_, value| value.round(2) }.to_json %>,
      borderColor: 'rgb(75, 192, 192)',
      backgroundColor: 'rgba(75, 192, 192, 0.2)',
      tension: 0.1
    }]
  };
  
  const chart = new Chart(ctx, {
    type: 'line',
    data: chartData,
    options: {
      responsive: true,
      scales: {
        y: {
          beginAtZero: true
        }
      },
      plugins: {
        title: {
          display: true,
          text: <%= raw "Metric: #{@metric.function.capitalize} Function".to_json %>
        }
      }
    }
  });
</script>
<% end %>
